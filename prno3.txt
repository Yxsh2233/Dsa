#include <iostream>
#include <stack>
#include <string>
using namespace std;

struct Node {
    string data;
    Node* left, *right;
};

Node* newNode(string data) {
    Node* node = new Node();
    node->data = data;
    node->left = node->right = nullptr;
    return node;
}

Node* constructPostfix(string postfix) {
    stack<Node*> st;
    for (char c : postfix) {
        if (isdigit(c)) {
            st.push(newNode(string(1, c)));
        } else {
            Node* right = st.top();
            st.pop();
            Node* left = st.top();
            st.pop();
            Node* node = newNode(string(1, c));
            node->left = left;
            node->right = right;
            st.push(node);
        }
    }
    return st.top();
}

Node* constructPrefix(string prefix) {
    stack<Node*> st;
    for (int i = prefix.size() - 1; i >= 0; --i) {
        char c = prefix[i];
        if (isdigit(c)) {
            st.push(newNode(string(1, c)));
        } else {
            Node* left = st.top();
            st.pop();
            Node* right = st.top();
            st.pop();
            Node* node = newNode(string(1, c));
            node->left = left;
            node->right = right;
            st.push(node);
        }
    }
    return st.top();
}

void preOrder(Node* node) {
    if (node) {
        cout << node->data << " ";
        preOrder(node->left);
        preOrder(node->right);
    }
}

int main() {
    string postfix = "23+45*+";
    Node* postfixRoot = constructPostfix(postfix);
    cout << "Postfix Expression: ";
    preOrder(postfixRoot);
    cout << endl;

    string prefix = "+*2345";
    Node* prefixRoot = constructPrefix(prefix);
    cout << "Prefix Expression: ";
    preOrder(prefixRoot);
    cout << endl;

    return 0;
}