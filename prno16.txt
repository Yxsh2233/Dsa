pr16:#include <iostream>
#include <vector>
#include <limits>
using namespace std;

const int MAX = 10;
const int INF = numeric_limits<int>::max();

void prim(int graph[MAX][MAX], int n) {
    int parent[n];
    int key[n];
    bool mstSet[n];

    for (int i = 0; i < n; i++) {
        key[i] = INF;
        mstSet[i] = false;
    }

    key[0] = 0;
    parent[0] = -1;

    for (int count = 0; count < n - 1; count++) {
        int u = -1;
        int minVal = INF;

        for (int i = 0; i < n; i++) {
            if (!mstSet[i] && key[i] < minVal) {
                minVal = key[i];
                u = i;
            }
        }

        mstSet[u] = true;

        for (int v = 0; v < n; v++) {
            if (graph[u][v] > 0 && !mstSet[v] && graph[u][v] < key[v]) {
                parent[v] = u;
                key[v] = graph[u][v];
            }
        }
    }

    cout << "Edges in MST:" << endl;
    for (int i = 1; i < n; i++) {
        cout << parent[i] << " -- " << i << " : " << graph[parent[i]][i] << endl;
    }
}

int main() {
    int graph[MAX][MAX] = {
        {0, 2, 0, 6, 0},
        {2, 0, 3, 8, 5},
        {0, 3, 0, 0, 7},
        {6, 8, 0, 0, 9},
        {0, 5, 7, 9, 0}
    };

    int n = 5;

    prim(graph, n);

    return 0;
}