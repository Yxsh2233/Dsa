#include <iostream>
using namespace std;

const int MAX = 5;

class CircularQueue {
    int arr[MAX];
    int front, rear, count;

public:
    CircularQueue() : front(0), rear(0), count(0) {}

    bool isEmpty() {
        return count == 0;
    }

    bool isFull() {
        return count == MAX;
    }

    void enqueue(int data) {
        if (isFull()) {
            cout << "Queue is full." << endl;
            return;
        }
        arr[rear] = data;
        rear = (rear + 1) % MAX;
        count++;
        cout << "Element " << data << " added to queue." << endl;
    }

    int dequeue() {
        if (isEmpty()) {
            cout << "Queue is empty." << endl;
            return -1;
        }
        int data = arr[front];
        front = (front + 1) % MAX;
        count--;
        cout << "Element " << data << " removed from queue." << endl;
        return data;
    }

    void display() {
        if (isEmpty()) {
            cout << "Queue is empty." << endl;
            return;
        }
        cout << "Queue elements: ";
        int temp = front;
        for (int i = 0; i < count; i++) {
            cout << arr[temp] << " ";
            temp = (temp + 1) % MAX;
        }
        cout << endl;
    }
};

int main() {
    CircularQueue q;

    q.enqueue(1);
    q.enqueue(2);
    q.enqueue(3);
    q.enqueue(4);
    q.enqueue(5);

    q.display();

    q.dequeue();
    q.dequeue();

    q.display();

    return 0;
}