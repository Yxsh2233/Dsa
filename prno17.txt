pr17:#include <iostream>
#include <fstream>
#include <string>
using namespace std;

struct Student {
    string name;
    int rollNo;
    float marks;
};

void addStudent() {
    ofstream file("student.dat", ios::app | ios::binary);
    if (!file) {
        cout << "Error opening file." << endl;
        return;
    }

    Student student;
    cout << "Enter name: ";
    cin >> student.name;
    cout << "Enter roll number: ";
    cin >> student.rollNo;
    cout << "Enter marks: ";
    cin >> student.marks;

    file.write((char*)&student, sizeof(Student));
    file.close();
    cout << "Student added successfully." << endl;
}

void deleteStudent() {
    ifstream file("student.dat", ios::binary);
    if (!file) {
        cout << "Error opening file." << endl;
        return;
    }

    ofstream temp("temp.dat", ios::binary);
    if (!temp) {
        cout << "Error opening temporary file." << endl;
        return;
    }

    Student student;
    int rollNo;
    cout << "Enter roll number of student to delete: ";
    cin >> rollNo;

    while (file.read((char*)&student, sizeof(Student))) {
        if (student.rollNo != rollNo) {
            temp.write((char*)&student, sizeof(Student));
        }
    }

    file.close();
    temp.close();
    remove("student.dat");
    rename("temp.dat", "student.dat");
    cout << "Student deleted successfully." << endl;
}

void displayStudent() {
    ifstream file("student.dat", ios::binary);
    if (!file) {
        cout << "Error opening file." << endl;
        return;
    }

    Student student;
    int rollNo;
    cout << "Enter roll number of student to display: ";
    cin >> rollNo;

    while (file.read((char*)&student, sizeof(Student))) {
        if (student.rollNo == rollNo) {
            cout << "Name: " << student.name << endl;
            cout << "Roll Number: " << student.rollNo << endl;
            cout << "Marks: " << student.marks << endl;
            return;
        }
    }

    cout << "Student not found." << endl;
    file.close();
}

int main() {
    int choice;
    do {
        cout << "1. Add Student" << endl;
        cout << "2. Delete Student" << endl;
        cout << "3. Display Student" << endl;
        cout << "4. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                addStudent();
                break;
            case 2:
                deleteStudent();
                break;
            case 3:
                displayStudent();
                break;
            case 4:
                break;
            default:
                cout << "Invalid choice. Please try again." << endl;
        }
    } while (choice != 4);

    return 0;
}